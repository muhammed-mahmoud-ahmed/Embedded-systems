
3-Button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000470  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004c4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  00000530  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b3a  00000000  00000000  00000608  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000705  00000000  00000000  00001142  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000549  00000000  00000000  00001847  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000140  00000000  00000000  00001d90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000438  00000000  00000000  00001ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000426  00000000  00000000  00002308  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  0000272e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 96 00 	jmp	0x12c	; 0x12c <__ctors_end>
   4:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
   8:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
   c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  10:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  14:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  18:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  1c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  20:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  24:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  28:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  2c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  30:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  34:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  38:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  3c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  40:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  44:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  48:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  4c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  50:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
  54:	b5 00       	.word	0x00b5	; ????
  56:	ce 00       	.word	0x00ce	; ????
  58:	e7 00       	.word	0x00e7	; ????
  5a:	00 01       	movw	r0, r0
  5c:	18 01       	movw	r2, r16
  5e:	18 01       	movw	r2, r16
  60:	18 01       	movw	r2, r16
  62:	18 01       	movw	r2, r16
  64:	18 01       	movw	r2, r16
  66:	18 01       	movw	r2, r16
  68:	18 01       	movw	r2, r16
  6a:	18 01       	movw	r2, r16
  6c:	18 01       	movw	r2, r16
  6e:	18 01       	movw	r2, r16
  70:	18 01       	movw	r2, r16
  72:	18 01       	movw	r2, r16
  74:	18 01       	movw	r2, r16
  76:	18 01       	movw	r2, r16
  78:	18 01       	movw	r2, r16
  7a:	18 01       	movw	r2, r16
  7c:	18 01       	movw	r2, r16
  7e:	18 01       	movw	r2, r16
  80:	18 01       	movw	r2, r16
  82:	18 01       	movw	r2, r16
  84:	18 01       	movw	r2, r16
  86:	18 01       	movw	r2, r16
  88:	18 01       	movw	r2, r16
  8a:	18 01       	movw	r2, r16
  8c:	18 01       	movw	r2, r16
  8e:	18 01       	movw	r2, r16
  90:	18 01       	movw	r2, r16
  92:	18 01       	movw	r2, r16
  94:	b5 00       	.word	0x00b5	; ????
  96:	ce 00       	.word	0x00ce	; ????
  98:	e7 00       	.word	0x00e7	; ????
  9a:	00 01       	movw	r0, r0
  9c:	25 01       	movw	r4, r10
  9e:	48 01       	movw	r8, r16
  a0:	6b 01       	movw	r12, r22
  a2:	8e 01       	movw	r16, r28
  a4:	b0 01       	movw	r22, r0
  a6:	b0 01       	movw	r22, r0
  a8:	b0 01       	movw	r22, r0
  aa:	b0 01       	movw	r22, r0
  ac:	b0 01       	movw	r22, r0
  ae:	b0 01       	movw	r22, r0
  b0:	b0 01       	movw	r22, r0
  b2:	b0 01       	movw	r22, r0
  b4:	b0 01       	movw	r22, r0
  b6:	b0 01       	movw	r22, r0
  b8:	b0 01       	movw	r22, r0
  ba:	b0 01       	movw	r22, r0
  bc:	b0 01       	movw	r22, r0
  be:	b0 01       	movw	r22, r0
  c0:	b0 01       	movw	r22, r0
  c2:	b0 01       	movw	r22, r0
  c4:	b0 01       	movw	r22, r0
  c6:	b0 01       	movw	r22, r0
  c8:	b0 01       	movw	r22, r0
  ca:	b0 01       	movw	r22, r0
  cc:	b0 01       	movw	r22, r0
  ce:	b0 01       	movw	r22, r0
  d0:	b0 01       	movw	r22, r0
  d2:	b0 01       	movw	r22, r0
  d4:	b0 01       	movw	r22, r0
  d6:	b0 01       	movw	r22, r0
  d8:	b0 01       	movw	r22, r0
  da:	b0 01       	movw	r22, r0
  dc:	25 01       	movw	r4, r10
  de:	48 01       	movw	r8, r16
  e0:	6b 01       	movw	r12, r22
  e2:	8e 01       	movw	r16, r28
  e4:	bf 01       	movw	r22, r30
  e6:	d2 01       	movw	r26, r4
  e8:	e5 01       	movw	r28, r10
  ea:	f8 01       	movw	r30, r16
  ec:	0a 02       	muls	r16, r26
  ee:	0a 02       	muls	r16, r26
  f0:	0a 02       	muls	r16, r26
  f2:	0a 02       	muls	r16, r26
  f4:	0a 02       	muls	r16, r26
  f6:	0a 02       	muls	r16, r26
  f8:	0a 02       	muls	r16, r26
  fa:	0a 02       	muls	r16, r26
  fc:	0a 02       	muls	r16, r26
  fe:	0a 02       	muls	r16, r26
 100:	0a 02       	muls	r16, r26
 102:	0a 02       	muls	r16, r26
 104:	0a 02       	muls	r16, r26
 106:	0a 02       	muls	r16, r26
 108:	0a 02       	muls	r16, r26
 10a:	0a 02       	muls	r16, r26
 10c:	0a 02       	muls	r16, r26
 10e:	0a 02       	muls	r16, r26
 110:	0a 02       	muls	r16, r26
 112:	0a 02       	muls	r16, r26
 114:	0a 02       	muls	r16, r26
 116:	0a 02       	muls	r16, r26
 118:	0a 02       	muls	r16, r26
 11a:	0a 02       	muls	r16, r26
 11c:	0a 02       	muls	r16, r26
 11e:	0a 02       	muls	r16, r26
 120:	0a 02       	muls	r16, r26
 122:	0a 02       	muls	r16, r26
 124:	bf 01       	movw	r22, r30
 126:	d2 01       	movw	r26, r4
 128:	e5 01       	movw	r28, r10
 12a:	f8 01       	movw	r30, r16

0000012c <__ctors_end>:
 12c:	11 24       	eor	r1, r1
 12e:	1f be       	out	0x3f, r1	; 63
 130:	cf e5       	ldi	r28, 0x5F	; 95
 132:	d8 e0       	ldi	r29, 0x08	; 8
 134:	de bf       	out	0x3e, r29	; 62
 136:	cd bf       	out	0x3d, r28	; 61
 138:	0e 94 18 02 	call	0x430	; 0x430 <main>
 13c:	0c 94 36 02 	jmp	0x46c	; 0x46c <_exit>

00000140 <__bad_interrupt>:
 140:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000144 <button_vInitialize>:
#include "DIO.h"

//button initialize
void button_vInitialize (unsigned char port_name,unsigned char pin_num)
{
    DIO_vSetPinDir(port_name,pin_num,0);
 144:	40 e0       	ldi	r20, 0x00	; 0
 146:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_vSetPinDir>
 14a:	08 95       	ret

0000014c <button_ucRead>:
}

//button read
unsigned char button_ucRead(unsigned char port_name,unsigned char pin_num)
{
    return DIO_u8ReadPin(port_name,pin_num);
 14c:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_u8ReadPin>
}
 150:	08 95       	ret

00000152 <DIO_vSetPinDir>:
		TOGGLE_BIT(PORTC, pin_num);
		break;

	case 'd':
	case 'D':
		TOGGLE_BIT(PORTD, pin_num);
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	fc 01       	movw	r30, r24
 156:	e1 54       	subi	r30, 0x41	; 65
 158:	f1 09       	sbc	r31, r1
 15a:	e4 32       	cpi	r30, 0x24	; 36
 15c:	f1 05       	cpc	r31, r1
 15e:	08 f0       	brcs	.+2      	; 0x162 <DIO_vSetPinDir+0x10>
 160:	67 c0       	rjmp	.+206    	; 0x230 <DIO_vSetPinDir+0xde>
 162:	e6 5d       	subi	r30, 0xD6	; 214
 164:	ff 4f       	sbci	r31, 0xFF	; 255
 166:	0c 94 30 02 	jmp	0x460	; 0x460 <__tablejump2__>
 16a:	41 30       	cpi	r20, 0x01	; 1
 16c:	59 f4       	brne	.+22     	; 0x184 <DIO_vSetPinDir+0x32>
 16e:	2a b3       	in	r18, 0x1a	; 26
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_vSetPinDir+0x28>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	6a 95       	dec	r22
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_vSetPinDir+0x24>
 17e:	82 2b       	or	r24, r18
 180:	8a bb       	out	0x1a, r24	; 26
 182:	08 95       	ret
 184:	2a b3       	in	r18, 0x1a	; 26
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	02 c0       	rjmp	.+4      	; 0x190 <DIO_vSetPinDir+0x3e>
 18c:	88 0f       	add	r24, r24
 18e:	99 1f       	adc	r25, r25
 190:	6a 95       	dec	r22
 192:	e2 f7       	brpl	.-8      	; 0x18c <DIO_vSetPinDir+0x3a>
 194:	80 95       	com	r24
 196:	82 23       	and	r24, r18
 198:	8a bb       	out	0x1a, r24	; 26
 19a:	08 95       	ret
 19c:	41 30       	cpi	r20, 0x01	; 1
 19e:	59 f4       	brne	.+22     	; 0x1b6 <DIO_vSetPinDir+0x64>
 1a0:	27 b3       	in	r18, 0x17	; 23
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_vSetPinDir+0x5a>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	6a 95       	dec	r22
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_vSetPinDir+0x56>
 1b0:	82 2b       	or	r24, r18
 1b2:	87 bb       	out	0x17, r24	; 23
 1b4:	08 95       	ret
 1b6:	27 b3       	in	r18, 0x17	; 23
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <DIO_vSetPinDir+0x70>
 1be:	88 0f       	add	r24, r24
 1c0:	99 1f       	adc	r25, r25
 1c2:	6a 95       	dec	r22
 1c4:	e2 f7       	brpl	.-8      	; 0x1be <DIO_vSetPinDir+0x6c>
 1c6:	80 95       	com	r24
 1c8:	82 23       	and	r24, r18
 1ca:	87 bb       	out	0x17, r24	; 23
 1cc:	08 95       	ret
 1ce:	41 30       	cpi	r20, 0x01	; 1
 1d0:	59 f4       	brne	.+22     	; 0x1e8 <DIO_vSetPinDir+0x96>
 1d2:	24 b3       	in	r18, 0x14	; 20
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_vSetPinDir+0x8c>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	6a 95       	dec	r22
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_vSetPinDir+0x88>
 1e2:	82 2b       	or	r24, r18
 1e4:	84 bb       	out	0x14, r24	; 20
 1e6:	08 95       	ret
 1e8:	24 b3       	in	r18, 0x14	; 20
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_vSetPinDir+0xa2>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_vSetPinDir+0x9e>
 1f8:	80 95       	com	r24
 1fa:	82 23       	and	r24, r18
 1fc:	84 bb       	out	0x14, r24	; 20
 1fe:	08 95       	ret
 200:	41 30       	cpi	r20, 0x01	; 1
 202:	59 f4       	brne	.+22     	; 0x21a <DIO_vSetPinDir+0xc8>
 204:	21 b3       	in	r18, 0x11	; 17
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_vSetPinDir+0xbe>
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	6a 95       	dec	r22
 212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_vSetPinDir+0xba>
 214:	82 2b       	or	r24, r18
 216:	81 bb       	out	0x11, r24	; 17
 218:	08 95       	ret
 21a:	21 b3       	in	r18, 0x11	; 17
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	02 c0       	rjmp	.+4      	; 0x226 <DIO_vSetPinDir+0xd4>
 222:	88 0f       	add	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	6a 95       	dec	r22
 228:	e2 f7       	brpl	.-8      	; 0x222 <DIO_vSetPinDir+0xd0>
 22a:	80 95       	com	r24
 22c:	82 23       	and	r24, r18
 22e:	81 bb       	out	0x11, r24	; 17
 230:	08 95       	ret

00000232 <DIO_vWritePinValue>:
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	fc 01       	movw	r30, r24
 236:	e1 54       	subi	r30, 0x41	; 65
 238:	f1 09       	sbc	r31, r1
 23a:	e4 32       	cpi	r30, 0x24	; 36
 23c:	f1 05       	cpc	r31, r1
 23e:	08 f0       	brcs	.+2      	; 0x242 <DIO_vWritePinValue+0x10>
 240:	8f c0       	rjmp	.+286    	; 0x360 <DIO_vWritePinValue+0x12e>
 242:	e2 5b       	subi	r30, 0xB2	; 178
 244:	ff 4f       	sbci	r31, 0xFF	; 255
 246:	0c 94 30 02 	jmp	0x460	; 0x460 <__tablejump2__>
 24a:	8a b3       	in	r24, 0x1a	; 26
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	06 2e       	mov	r0, r22
 250:	02 c0       	rjmp	.+4      	; 0x256 <DIO_vWritePinValue+0x24>
 252:	95 95       	asr	r25
 254:	87 95       	ror	r24
 256:	0a 94       	dec	r0
 258:	e2 f7       	brpl	.-8      	; 0x252 <DIO_vWritePinValue+0x20>
 25a:	80 ff       	sbrs	r24, 0
 25c:	81 c0       	rjmp	.+258    	; 0x360 <DIO_vWritePinValue+0x12e>
 25e:	41 30       	cpi	r20, 0x01	; 1
 260:	59 f4       	brne	.+22     	; 0x278 <DIO_vWritePinValue+0x46>
 262:	2b b3       	in	r18, 0x1b	; 27
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	02 c0       	rjmp	.+4      	; 0x26e <DIO_vWritePinValue+0x3c>
 26a:	88 0f       	add	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	6a 95       	dec	r22
 270:	e2 f7       	brpl	.-8      	; 0x26a <DIO_vWritePinValue+0x38>
 272:	82 2b       	or	r24, r18
 274:	8b bb       	out	0x1b, r24	; 27
 276:	08 95       	ret
 278:	2b b3       	in	r18, 0x1b	; 27
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_vWritePinValue+0x52>
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_vWritePinValue+0x4e>
 288:	80 95       	com	r24
 28a:	82 23       	and	r24, r18
 28c:	8b bb       	out	0x1b, r24	; 27
 28e:	08 95       	ret
 290:	87 b3       	in	r24, 0x17	; 23
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	06 2e       	mov	r0, r22
 296:	02 c0       	rjmp	.+4      	; 0x29c <DIO_vWritePinValue+0x6a>
 298:	95 95       	asr	r25
 29a:	87 95       	ror	r24
 29c:	0a 94       	dec	r0
 29e:	e2 f7       	brpl	.-8      	; 0x298 <DIO_vWritePinValue+0x66>
 2a0:	80 ff       	sbrs	r24, 0
 2a2:	5e c0       	rjmp	.+188    	; 0x360 <DIO_vWritePinValue+0x12e>
 2a4:	41 30       	cpi	r20, 0x01	; 1
 2a6:	59 f4       	brne	.+22     	; 0x2be <DIO_vWritePinValue+0x8c>
 2a8:	28 b3       	in	r18, 0x18	; 24
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <DIO_vWritePinValue+0x82>
 2b0:	88 0f       	add	r24, r24
 2b2:	99 1f       	adc	r25, r25
 2b4:	6a 95       	dec	r22
 2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <DIO_vWritePinValue+0x7e>
 2b8:	82 2b       	or	r24, r18
 2ba:	88 bb       	out	0x18, r24	; 24
 2bc:	08 95       	ret
 2be:	28 b3       	in	r18, 0x18	; 24
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <DIO_vWritePinValue+0x98>
 2c6:	88 0f       	add	r24, r24
 2c8:	99 1f       	adc	r25, r25
 2ca:	6a 95       	dec	r22
 2cc:	e2 f7       	brpl	.-8      	; 0x2c6 <DIO_vWritePinValue+0x94>
 2ce:	80 95       	com	r24
 2d0:	82 23       	and	r24, r18
 2d2:	88 bb       	out	0x18, r24	; 24
 2d4:	08 95       	ret
 2d6:	84 b3       	in	r24, 0x14	; 20
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	06 2e       	mov	r0, r22
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <DIO_vWritePinValue+0xb0>
 2de:	95 95       	asr	r25
 2e0:	87 95       	ror	r24
 2e2:	0a 94       	dec	r0
 2e4:	e2 f7       	brpl	.-8      	; 0x2de <DIO_vWritePinValue+0xac>
 2e6:	80 ff       	sbrs	r24, 0
 2e8:	3b c0       	rjmp	.+118    	; 0x360 <DIO_vWritePinValue+0x12e>
 2ea:	41 30       	cpi	r20, 0x01	; 1
 2ec:	59 f4       	brne	.+22     	; 0x304 <DIO_vWritePinValue+0xd2>
 2ee:	25 b3       	in	r18, 0x15	; 21
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <DIO_vWritePinValue+0xc8>
 2f6:	88 0f       	add	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	6a 95       	dec	r22
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <DIO_vWritePinValue+0xc4>
 2fe:	82 2b       	or	r24, r18
 300:	85 bb       	out	0x15, r24	; 21
 302:	08 95       	ret
 304:	25 b3       	in	r18, 0x15	; 21
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	02 c0       	rjmp	.+4      	; 0x310 <DIO_vWritePinValue+0xde>
 30c:	88 0f       	add	r24, r24
 30e:	99 1f       	adc	r25, r25
 310:	6a 95       	dec	r22
 312:	e2 f7       	brpl	.-8      	; 0x30c <DIO_vWritePinValue+0xda>
 314:	80 95       	com	r24
 316:	82 23       	and	r24, r18
 318:	85 bb       	out	0x15, r24	; 21
 31a:	08 95       	ret
 31c:	81 b3       	in	r24, 0x11	; 17
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	06 2e       	mov	r0, r22
 322:	02 c0       	rjmp	.+4      	; 0x328 <DIO_vWritePinValue+0xf6>
 324:	95 95       	asr	r25
 326:	87 95       	ror	r24
 328:	0a 94       	dec	r0
 32a:	e2 f7       	brpl	.-8      	; 0x324 <DIO_vWritePinValue+0xf2>
 32c:	80 ff       	sbrs	r24, 0
 32e:	18 c0       	rjmp	.+48     	; 0x360 <DIO_vWritePinValue+0x12e>
 330:	41 30       	cpi	r20, 0x01	; 1
 332:	59 f4       	brne	.+22     	; 0x34a <DIO_vWritePinValue+0x118>
 334:	22 b3       	in	r18, 0x12	; 18
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	02 c0       	rjmp	.+4      	; 0x340 <DIO_vWritePinValue+0x10e>
 33c:	88 0f       	add	r24, r24
 33e:	99 1f       	adc	r25, r25
 340:	6a 95       	dec	r22
 342:	e2 f7       	brpl	.-8      	; 0x33c <DIO_vWritePinValue+0x10a>
 344:	82 2b       	or	r24, r18
 346:	82 bb       	out	0x12, r24	; 18
 348:	08 95       	ret
 34a:	22 b3       	in	r18, 0x12	; 18
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	02 c0       	rjmp	.+4      	; 0x356 <DIO_vWritePinValue+0x124>
 352:	88 0f       	add	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	6a 95       	dec	r22
 358:	e2 f7       	brpl	.-8      	; 0x352 <DIO_vWritePinValue+0x120>
 35a:	80 95       	com	r24
 35c:	82 23       	and	r24, r18
 35e:	82 bb       	out	0x12, r24	; 18
 360:	08 95       	ret

00000362 <DIO_u8ReadPin>:
	}
}

// Read pin
unsigned char DIO_u8ReadPin(unsigned char port_name, unsigned char pin_number)
{
 362:	a6 2f       	mov	r26, r22
	unsigned char value;
	switch (port_name)
 364:	48 2f       	mov	r20, r24
 366:	50 e0       	ldi	r21, 0x00	; 0
 368:	fa 01       	movw	r30, r20
 36a:	e1 54       	subi	r30, 0x41	; 65
 36c:	f1 09       	sbc	r31, r1
 36e:	e4 32       	cpi	r30, 0x24	; 36
 370:	f1 05       	cpc	r31, r1
 372:	08 f0       	brcs	.+2      	; 0x376 <DIO_u8ReadPin+0x14>
 374:	4f c0       	rjmp	.+158    	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 376:	ee 58       	subi	r30, 0x8E	; 142
 378:	ff 4f       	sbci	r31, 0xFF	; 255
 37a:	0c 94 30 02 	jmp	0x460	; 0x460 <__tablejump2__>
	{
		
	case 'a':
	case 'A':
		value = READ_BIT(PINA, pin_number);
 37e:	29 b3       	in	r18, 0x19	; 25
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	0a 2e       	mov	r0, r26
 386:	02 c0       	rjmp	.+4      	; 0x38c <DIO_u8ReadPin+0x2a>
 388:	88 0f       	add	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	0a 94       	dec	r0
 38e:	e2 f7       	brpl	.-8      	; 0x388 <DIO_u8ReadPin+0x26>
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	82 23       	and	r24, r18
 394:	93 23       	and	r25, r19
 396:	02 c0       	rjmp	.+4      	; 0x39c <DIO_u8ReadPin+0x3a>
 398:	95 95       	asr	r25
 39a:	87 95       	ror	r24
 39c:	aa 95       	dec	r26
 39e:	e2 f7       	brpl	.-8      	; 0x398 <DIO_u8ReadPin+0x36>
 3a0:	98 2f       	mov	r25, r24
		break;
 3a2:	38 c0       	rjmp	.+112    	; 0x414 <__LOCK_REGION_LENGTH__+0x14>

	case 'b':
	case 'B':
		value = READ_BIT(PINB, pin_number);
 3a4:	26 b3       	in	r18, 0x16	; 22
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	0a 2e       	mov	r0, r26
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <DIO_u8ReadPin+0x50>
 3ae:	88 0f       	add	r24, r24
 3b0:	99 1f       	adc	r25, r25
 3b2:	0a 94       	dec	r0
 3b4:	e2 f7       	brpl	.-8      	; 0x3ae <DIO_u8ReadPin+0x4c>
 3b6:	30 e0       	ldi	r19, 0x00	; 0
 3b8:	82 23       	and	r24, r18
 3ba:	93 23       	and	r25, r19
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_u8ReadPin+0x60>
 3be:	95 95       	asr	r25
 3c0:	87 95       	ror	r24
 3c2:	aa 95       	dec	r26
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_u8ReadPin+0x5c>
 3c6:	98 2f       	mov	r25, r24
		break;
 3c8:	25 c0       	rjmp	.+74     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>

	case 'c':
	case 'C':
		value = READ_BIT(PINC, pin_number);
 3ca:	23 b3       	in	r18, 0x13	; 19
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	0a 2e       	mov	r0, r26
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <DIO_u8ReadPin+0x76>
 3d4:	88 0f       	add	r24, r24
 3d6:	99 1f       	adc	r25, r25
 3d8:	0a 94       	dec	r0
 3da:	e2 f7       	brpl	.-8      	; 0x3d4 <DIO_u8ReadPin+0x72>
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	82 23       	and	r24, r18
 3e0:	93 23       	and	r25, r19
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <DIO_u8ReadPin+0x86>
 3e4:	95 95       	asr	r25
 3e6:	87 95       	ror	r24
 3e8:	aa 95       	dec	r26
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <DIO_u8ReadPin+0x82>
 3ec:	98 2f       	mov	r25, r24
		break;
 3ee:	12 c0       	rjmp	.+36     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>

	case 'd':
	case 'D':
		value = READ_BIT(PIND, pin_number);
 3f0:	20 b3       	in	r18, 0x10	; 16
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	0a 2e       	mov	r0, r26
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <DIO_u8ReadPin+0x9c>
 3fa:	88 0f       	add	r24, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	0a 94       	dec	r0
 400:	e2 f7       	brpl	.-8      	; 0x3fa <DIO_u8ReadPin+0x98>
 402:	30 e0       	ldi	r19, 0x00	; 0
 404:	82 23       	and	r24, r18
 406:	93 23       	and	r25, r19
 408:	02 c0       	rjmp	.+4      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40a:	95 95       	asr	r25
 40c:	87 95       	ror	r24
 40e:	aa 95       	dec	r26
 410:	e2 f7       	brpl	.-8      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 412:	98 2f       	mov	r25, r24
		break;

	}
	return value;
}
 414:	89 2f       	mov	r24, r25
 416:	08 95       	ret

00000418 <LED_vInitialize>:

#include "DIO.h"
//led initialize :
void LED_vInitialize(unsigned char port_name,unsigned char pin_num)
{
    DIO_vSetPinDir(port_name,pin_num,1);
 418:	41 e0       	ldi	r20, 0x01	; 1
 41a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_vSetPinDir>
 41e:	08 95       	ret

00000420 <LED_vOn>:


//led on :
void LED_vOn(unsigned char port_name,unsigned char pin_num)
{
    DIO_vWritePinValue(port_name,pin_num,1);
 420:	41 e0       	ldi	r20, 0x01	; 1
 422:	0e 94 19 01 	call	0x232	; 0x232 <DIO_vWritePinValue>
 426:	08 95       	ret

00000428 <LED_vOff>:
}

//led off :
void LED_vOff(unsigned char port_name,unsigned char pin_num)
{
    DIO_vWritePinValue(port_name,pin_num,0);
 428:	40 e0       	ldi	r20, 0x00	; 0
 42a:	0e 94 19 01 	call	0x232	; 0x232 <DIO_vWritePinValue>
 42e:	08 95       	ret

00000430 <main>:
#include "button.h"
#include "LED.h"

int main(void)
{
	button_vInitialize('a',0);
 430:	60 e0       	ldi	r22, 0x00	; 0
 432:	81 e6       	ldi	r24, 0x61	; 97
 434:	0e 94 a2 00 	call	0x144	; 0x144 <button_vInitialize>
	LED_vInitialize('a',1);
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	81 e6       	ldi	r24, 0x61	; 97
 43c:	0e 94 0c 02 	call	0x418	; 0x418 <LED_vInitialize>
    /* Replace with your application code */
    while (1) 
    {
		if(button_ucRead('a',0)==1)
 440:	60 e0       	ldi	r22, 0x00	; 0
 442:	81 e6       	ldi	r24, 0x61	; 97
 444:	0e 94 a6 00 	call	0x14c	; 0x14c <button_ucRead>
 448:	81 30       	cpi	r24, 0x01	; 1
 44a:	29 f4       	brne	.+10     	; 0x456 <main+0x26>
		{
			LED_vOn('a',1);
 44c:	61 e0       	ldi	r22, 0x01	; 1
 44e:	81 e6       	ldi	r24, 0x61	; 97
 450:	0e 94 10 02 	call	0x420	; 0x420 <LED_vOn>
 454:	f5 cf       	rjmp	.-22     	; 0x440 <main+0x10>
		}
		else
		{
			LED_vOff('a',1);
 456:	61 e0       	ldi	r22, 0x01	; 1
 458:	81 e6       	ldi	r24, 0x61	; 97
 45a:	0e 94 14 02 	call	0x428	; 0x428 <LED_vOff>
 45e:	f0 cf       	rjmp	.-32     	; 0x440 <main+0x10>

00000460 <__tablejump2__>:
 460:	ee 0f       	add	r30, r30
 462:	ff 1f       	adc	r31, r31
 464:	05 90       	lpm	r0, Z+
 466:	f4 91       	lpm	r31, Z
 468:	e0 2d       	mov	r30, r0
 46a:	09 94       	ijmp

0000046c <_exit>:
 46c:	f8 94       	cli

0000046e <__stop_program>:
 46e:	ff cf       	rjmp	.-2      	; 0x46e <__stop_program>
